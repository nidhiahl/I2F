# -*- coding: utf-8 -*-
"""rrcf_static.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XY-u0u1gu6_Uzoph2jKZRhQI8_Z-DbIU
"""


import numpy as np
import pandas as pd
import rrcf

# Set sample parameters
np.random.seed(0)
n = 2010
d = 3

# Generate data
X = np.zeros((n, d))
X[:1000,0] = 5
X[1000:2000,0] = -5
X += 0.01*np.random.randn(*X.shape)

#X = np.zeros((n, d))
#X[:1000,0] = 5
#X

# Set forest parameters
num_trees = 100
tree_size = 256
sample_size_range = (n // tree_size, tree_size)

# Construct forest
forest = []
while len(forest) < num_trees:
    # Select random subsets of points uniformly
    ixs = np.random.choice(n, size=sample_size_range,
                           replace=False)
    # Add sampled trees to forest
    trees = [rrcf.RCTree(X[ix], index_labels=ix)
             for ix in ixs]
    forest.extend(trees)

# Compute average CoDisp
avg_codisp = pd.Series(0.0, index=np.arange(n))
index = np.zeros(n)
for tree in forest:
    codisp = pd.Series({leaf : tree.codisp(leaf)
                       for leaf in tree.leaves})
    avg_codisp[codisp.index] += codisp
    np.add.at(index, codisp.index.values, 1)
avg_codisp /= index

avg_codisp

from sklearn.ensemble import IsolationForest
contamination = 10/2010
#IF = IsolationForest(n_estimators=num_trees, contamination=contamination, behaviour='new', random_state=0)
IF = IsolationForest(n_estimators=num_trees,
                     contamination=contamination,
                     random_state=0)
IF.fit(X)
if_scores = IF.score_samples(X)
if_scores = pd.Series(-if_scores, index=range(2010))

from matplotlib import pyplot as plt
import seaborn as sns

avg_codisp = ((avg_codisp - avg_codisp.min())
              / (avg_codisp.max() - avg_codisp.min()))

if_scores = ((if_scores - if_scores.min())
              / (if_scores.max() - if_scores.min()))

fig, ax = plt.subplots(2, figsize=(10, 6))
if_scores.plot(ax=ax[0], color='0.5',alpha=0.8)

avg_codisp.plot(ax=ax[1], color='0.5',alpha=0.8)

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from matplotlib import colors

threshold_rrcf = avg_codisp.nlargest(n=10).min()
threshold_if = if_scores.nlargest(n=10).min()
fig = plt.figure(figsize=(12,4.5))
ax = fig.add_subplot(121, projection='3d')
sc = ax.scatter(X[:,0], X[:,1], X[:,2],
                c=(if_scores >= threshold_if).astype(float),
                cmap='cool')
plt.title('log(CoDisp)')
ax = fig.add_subplot(122, projection='3d')
sc = ax.scatter(X[:,0], X[:,1], X[:,2],
                linewidths=0.1, edgecolors='k',
                c=(avg_codisp >= threshold_rrcf).astype(float),
                cmap='cool')
plt.title('CoDisp above 99.5th percentile')


plt.show()
